# 指定编译平台
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm-none-eabi)
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

# 跳过编译器检查(交叉编译)
set(CMAKE_C_COMPILER_FORCED TRUE)
set(CMAKE_CXX_COMPILER_FORCED TRUE)

# 指定工具链
set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER arm-none-eabi-gcc)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)
set(CMAKE_AR arm-none-eabi-gcc-ar)
set(CMAKE_NM arm-none-eabi-gcc-nm)

# 指定find_xxx路径
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# 指定各个优化等级的编译选项
set(FLAGS_DEBUG "-g3 -ggdb -Og")
set(FLAGS_RELEASE "-O2 -s")
set(FLAGS_MINSIZEREL "-Os -s")
set(FLAGS_RELWITHDEBINFO "-g3 -ggdb -O2")

# Debug
set(CMAKE_C_FLAGS_DEBUG ${FLAGS_DEBUG})
set(CMAKE_CXX_FLAGS_DEBUG ${FLAGS_DEBUG})
# Release
set(CMAKE_C_FLAGS_RELEASE ${FLAGS_RELEASE})
set(CMAKE_CXX_FLAGS_RELEASE ${FLAGS_RELEASE})
# MinSizeRel
set(CMAKE_C_FLAGS_MINSIZEREL ${FLAGS_MINSIZEREL})
set(CMAKE_CXX_FLAGS_MINSIZEREL ${FLAGS_MINSIZEREL})
# RelWithDebInfo
set(CMAKE_C_FLAGS_RELWITHDEBINFO ${FLAGS_RELWITHDEBINFO})
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${FLAGS_RELWITHDEBINFO})
